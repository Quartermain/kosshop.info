@import "sprite/*.png";
@import "sprite2x/*.png";

$icons: sprite-map("sprite/*.png");
$icons-2x: sprite-map("sprite2x/*.png");

//Sprite mixin, works perfectly with standard defines
@mixin use-sprite($sprite) {
    background-image: sprite-url($icons);
    background-position: sprite-position($icons, $sprite);
    background-repeat: no-repeat;
    overflow: hidden;
    display: inline-block;
    height: image-height(sprite-file($icons, $sprite));
    width: image-width(sprite-file($icons, $sprite));
    vertical-align: middle;

    @media (-webkit-min-device-pixel-ratio: 2), (-o-min-device-pixel-ratio: 3/2), (min--moz-device-pixel-ratio: 2), (min-device-pixel-ratio: 2), (min-resolution: 144dpi) {
        background-image: sprite-url($icons-2x);
        background-size: (image-width(sprite-path($icons-2x)) / 2) (image-height(sprite-path($icons-2x)) / 2);
        background-position: round(nth(sprite-position($icons-2x, $sprite), 1) / 2) round(nth(sprite-position($icons-2x, $sprite), 2) / 2);
        height: image-height(sprite-file($icons-2x, $sprite)) / 2;
        width: image-width(sprite-file($icons-2x, $sprite)) / 2;
    }
}

@mixin background-size-icon ($width, $height,$imagePath, $name,$type ){
   background: url('../' + $imagePath + '/' + $name + '.' + $type) no-repeat ;
   -moz-background-size: $width $height;
  -webkit-background-size: $width $height;
       -o-background-size: $width $height;
          background-size: $width $height;
  height: $height;
  width:  $width;
}